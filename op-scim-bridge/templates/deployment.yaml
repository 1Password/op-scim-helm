apiVersion: apps/v1
kind: Deployment
metadata:
name: {{ tpl .Values.scim.name . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: {{ tpl .Values.scim.name . }}
    {{ with .Values.scim.labels }}
      {{ toYaml . | nindent 4 }}
    {{ end }}
  {{ with .Values.scim.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{ end }}
spec:
  selector:
    matchLabels:
      app: {{ tpl .Values.scim.name . }}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ tpl .Values.scim.name . }}
        version: {{ tpl .Values.scim.version . }}
        app.kubernetes.io/component: {{ tpl .Values.scim.name . }}
        {{ with .Values.scim.podLabels }}
          {{ toYaml . | nindent 8 }}
        {{ end }}
      {{ with .Values.scim.podAnnotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{ end }}
    spec:
      {{ with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      {{ with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      {{ with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      {{ if .Values.scim.credentialsVolume }}
      volumes:
        - name: {{ tpl .Values.scim.credentialsVolume.name . }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.scim.name . }}-pvc
      {{ end }}
      {{ if .Values.scim.credentialsVolume }}
      initContainers:
        - name: opuser-home-permissions
          image: alpine:3.12
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "mkdir -p /home/opuser/.op && chown -R 999 /home/opuser && chmod -R 700 /home/opuser"
          volumeMounts:
            - mountPath: /home/opuser/.op
              name: {{ tpl .Values.scim.name . }}-credentials
      {{ end }}
      containers:
        - name: {{ tpl .Values.scim.name . }}
          image: {{ .Values.scim.imageRepository }}:{{ tpl .Values.scim.version . }}
          imagePullPolicy: {{ .Values.scim.imagePullPolicy }}
          command: ["/op-scim/op-scim"]
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: false
          {{ with .Values.scim.imagePullSecrets }}
          imagePullSecrets:
            {{ toYaml . | nindent 12 }}
          {{ end }}
          {{ with .Values.scim.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{ end }}
          env:
            - name: "OP_PORT"
              value: "{{ .Values.scim.httpPort }}"
            - name: "OP_SESSION"
              {{ if .Values.scim.credentialsVolume }}
              value: "/home/opuser/.op/{{ .Values.scim.credentialsVolume.file }}"
              {{ end }}
              {{ if .Values.scim.credentialsSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .Values.scim.credentialsSecret.name . }}
                  key: {{ .Values.scim.credentialsSecret.key }}
              {{ end }}
            - name: "OP_REDIS_URL"
              value: "{{ tpl .Values.scim.config.redisURL . }}"
            - name: "OP_PING_SERVER"
              value: "{{ .Values.scim.probes.liveness.enabled }}"
            {{ if .Values.scim.config.letsEncryptDomain }}
            - name: "OP_LETSENCRYPT_DOMAIN"
              value: {{ .Values.scim.config.letsEncryptDomain }}
            {{ end }}
            {{ if .Values.scim.config.domain }}
            - name: "OP_DOMAIN"
              value: {{ .Values.scim.config.domain }}
            {{ end }}
            {{ if .Values.scim.config.debug }}
            - name: "OP_DEBUG"
              value: {{ .Values.scim.config.debug }}
            {{ end }}
            {{ if .Values.scim.config.jsonLogs }}
            - name: "OP_JSON_LOGS"
              value: {{ .Values.scim.config.jsonLogs }}
            {{ end }}
            {{ if .Values.scim.config.prettyLogs }}
            - name: "OP_PRETTY_LOGS"
              value: {{ .Values.scim.config.prettyLogs }}
            {{ end }}
          ports:
            - containerPort: {{ .Values.scim.httpPort }}
            - containerPort: {{ .Values.scim.httpsPort }}
          {{ if .Values.scim.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.scim.probes.liveness.path }}
              scheme: HTTP
              port: {{ .Values.scim.httpPort }}
            failureThreshold: 3
            periodSeconds: 30
            initialDelaySeconds: 15
          {{ end }}
          {{ if .Values.scim.credentialsVolume }}
          volumeMounts:
            - name: {{ tpl .Values.scim.name . }}-credentials
              mountPath: "/home/opuser/.op"
              readOnly: false
          {{ end }}
