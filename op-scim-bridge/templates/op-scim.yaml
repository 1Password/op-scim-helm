apiVersion: apps/v1
kind: Deployment
metadata:
  name: op-scim-bridge
  labels: &ScimDeploymentLabels
    app.kubernetes.io/application: {{ .Values.applicationName }}
    app.kubernetes.io/component: op-scim-bridge
spec:
  selector:
    matchLabels: *ScimDeploymentLabels
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels: *ScimDeploymentLabels
    spec:
      initContainers:
      - name: scimuser-home-permissions
        image: alpine:3.12
        command: ["/bin/sh", "-c"]
        args: ["mkdir -p {{ .Values.scimUserHome }} && chown -R {{ .Values.scimUserID }} {{ .Values.scimUserHome }}"]
        volumeMounts:
        - mountPath: "/home"
          name: {{ .Values.applicationName }}-scimsession
      containers:
      - name: op-scim-bridge
        image: {{ .Values.opscimImage }}
        imagePullPolicy: Always
        command: ["/op-scim/op-scim"]
        env:
        - name: "OP_PORT"
          value: "8080"
        - name: "OP_SESSION"
          value: "{{ .Values.scimUserHome }}/{{ .Values.scimsessionFile }}"
        - name: "OP_REDIS_URL"
          value: "redis://{{ .Values.applicationName }}-redis-master:6379"
        - name: "OP_PING_SERVER"
          value: "1"
        ports:
        - containerPort: 8080
        - containerPort: 8443
        volumeMounts:
        - name: {{ .Values.applicationName }}-scimsession
          mountPath: "/home"
          readOnly: false
      volumes:
      - name: {{ .Values.applicationName }}-scimsession
        persistentVolumeClaim:
          claimName: {{ .Values.applicationName }}-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.applicationName }}-svc
  labels:
    app.kubernetes.io/application: {{ .Values.applicationName }}
    app.kubernetes.io/component: op-scim-bridge
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: scim-bridge-https-port
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/application: {{ .Values.applicationName }}
    app.kubernetes.io/component: op-scim-bridge
  type: LoadBalancer

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.applicationName }}-pvc
  labels:
    app.kubernetes.io/application: {{ .Values.applicationName }}
    app.kubernetes.io/component: op-scim-bridge
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ .Values.storageClass }}
